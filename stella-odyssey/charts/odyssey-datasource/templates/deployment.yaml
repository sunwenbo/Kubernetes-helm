apiVersion: apps/v1
kind: Deployment
metadata:
  name: "odyssey-datasource"
  labels:
    {{- include "odyssey-datasource.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "odyssey-datasource.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "odyssey-datasource.selectorLabels" . | nindent 8 }}
    spec:
      hostname: datasource-service
    {{- if .Values.hostAliases }}
      hostAliases:
{{ toYaml .Values.hostAliases | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: datasource-configmap
            mountPath: /config/
          - name: krb5-configmap
            mountPath: /etc/krb5.conf
            subPath: krb5.conf
          - name: datasource-hadoop-configmap
            mountPath: /opt/hadoop/etc/hadoop/
          - name: datasource-hadoop-yarn-configmap
            mountPath: /opt/hadoop-yarn/etc/hadoop/
          - name: datasource-spark-configmap
            mountPath: /opt/spark-2.4.6-bin-hadoop2.7/conf/
          - name: datasource-keytab
            mountPath: {{ .Values.keytabPath }}
            subPath: {{ .Values.keytabFile }}
      initContainers:
        - name: init-eureka
          image: "{{ .Values.busybox.image}}:{{ .Values.busybox.tag }}"
          imagePullPolicy: "{{ .Values.busybox.imagePullPolicy }}"
          command: ['sh', '-c', 'until nslookup eureka-service; do echo waiting for eureka ; sleep 1; done;']
          securityContext:
            privileged: true
      volumes:
      - name: datasource-configmap
        configMap:
          name: datasource-configmap
      - name: krb5-configmap
        configMap:
          name: datasource-krb5-configmap
      - name: datasource-hadoop-configmap
        configMap:
          name: datasource-hadoop-configmap
      - name: datasource-hadoop-yarn-configmap
        configMap:
          name: datasource-hadoop-yarn-configmap
      - name: datasource-spark-configmap
        configMap:
          name: datasource-spark-configmap
      - name: datasource-keytab
        secret:
          secretName: datasource-keytab
